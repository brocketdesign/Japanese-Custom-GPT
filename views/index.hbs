<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
<div class="container mt-4">
    <h1>Welcome to the Quiz App</h1>
    <div id="storyContainer"></div>
</div>
<script>
$(document).ready(function() {
    const userId = 'user_' + Date.now(); // Generate a unique user ID for the session.
    const storyId = "{{storyId}}";
    let currentStep = 0;
    let totalSteps = 0;
    let storyData = {};

    fetchStoryData(storyId); // Fetch the initial story data when the page loads

    window.choosePath = function(choiceId) {
        if (currentStep === totalSteps - 1) {
            // Call email prompt function before showing the last step conclusion
            promptForEmail().then(() => {
                displayConclusion(choiceId); // Fetch and display choice result after email submission
            });
        } else {
            currentStep++;
            updateStoryContent(choiceId);
        }
    };

    function fetchStoryData(storyId) {
        $.ajax({
            url: `/api/story/${storyId}`,
            type: 'GET',
            dataType: 'json',
            success: function(data) {
                storyData = data.content.story;
                totalSteps = Object.keys(storyData).length;
                displayStep(storyData, currentStep);
            },
            error: function(xhr, status, error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to load the story: ' + error,
                    icon: 'error',
                    confirmButtonText: 'Ok'
                });
            }
        });
    }

    function displayStep(storyData, currentStep) {
        const step = storyData[`step${currentStep + 1}`];
        $('#storyContainer').html(`<p>${step.introduction}</p>`);
        step.choices.forEach(choice => {
            $('#storyContainer').append(
                `<button class="btn btn-primary my-2" onclick="choosePath('${choice.choiceId}')">${choice.choiceText}</button>`
            );
        });
    }

    function updateStoryContent(choiceId) {
        const previousStep = storyData[`step${currentStep}`]; // Previous step where the choice was made
        const choice = previousStep.choices.find(c => c.choiceId === choiceId);
        $('#storyContainer').html(`<p>${choice.result}</p>`);

        if (currentStep < totalSteps) {
            const nextStep = storyData[`step${currentStep + 1}`];
            $('#storyContainer').append(`<p>${nextStep.introduction}</p>`);
            nextStep.choices.forEach(choice => {
                $('#storyContainer').append(
                    `<button class="btn btn-primary my-2" onclick="choosePath('${choice.choiceId}')">${choice.choiceText}</button>`
                );
            });
        }
    }

    function displayConclusion(choiceId) {
        const previousStep = storyData[`step${currentStep + 1}`]; // Previous step where the choice was made
        const choice = previousStep.choices.find(c => c.choiceId === choiceId);
        $('#storyContainer').html(`<p>${choice.result}</p>`);

        const lastStep = storyData[`step${currentStep + 1}`];
        $('#storyContainer').append(`<p>${lastStep.conclusion}</p>`);
    }
function promptForEmail() {
    return Swal.fire({
        title: '物語の終わり',
        text: '結果を受け取るにはGmailを入力してください！',
        input: 'email',
        inputLabel: 'あなたのGmail',
        inputPlaceholder: 'メールアドレスを入力してください',
        showCancelButton: true,
        confirmButtonText: '送信',
        cancelButtonText: 'キャンセル',
        preConfirm: (email) => {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: '/api/submit-email',
                    type: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify({ email, userId: userId }),
                    success: function(response) {
                        resolve(response);
                    },
                    error: function(error) {
                        reject(error.statusText);
                    }
                });
            })
            .catch(error => {
                Swal.showValidationMessage(
                    `リクエストに失敗しました: ${error}`
                );
            });
        }
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire('送信完了！', 'メールが送信されました。', 'success');
        }
    });
}

});
</script>
</body>
</html>
