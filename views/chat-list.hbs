<!DOCTYPE html>
<html lang="ja">
       {{> dashboard-header}}
<body>
    {{> dashboard-nav}}

<style>
    /* user-dashboard-info-box */
    .chat-list .thumb {
        margin-right: 20px;
    }
    .chat-list .thumb img {
        width: 80px;
        height: 80px;
        -o-object-fit: cover;
        object-fit: cover;
        overflow: hidden;
        border-radius: 50%;
    }
    .chat-list.item {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        padding: 20px 5px;
        transition: background-color 0.3s ease;
    }
    .chat-list.item:hover {
        background-color: #f8f9fa;
    }
    .chat-list .chat-list-details {
        display: flex;
        flex-direction: column;
    }
    .chat-list .chat-list-actions {
        display: flex;
        align-items: center;
    }
    hr.separator {
        border: none;
        height: 1px;
        background-color: #b1b1b1;
        margin: 0;
    }
    .action-button{
        border:1px solid #ccc;
    }
    .action-button:hover{
        border:1px solid #fff;
        background-color: #fff;;
    }
    .truncate-text {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3; /* Number of lines to show */
        overflow: hidden;
        text-overflow: ellipsis;
    }
    .dropdown-toggle::after {
        display:none !important;
    }

    .online-text {
        width: 95%; /* Adjust the width as needed */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    .thumb{
        width: 20vw;
    }
    @media (max-width: 600px) {
    /* Styles for small screens */
        .thumb{
            width: 15vw;
        }
        .thumb img{
            width: 15vw !important;
            height: 15vw !important;
        }
        .chat-list-details{
            width: 100%;
        }
        .truncate-text {
            font-size: 12px !important;
        }
    }

</style>

<div class="container my-5">
    <h2 class="d-none">チャットボット一覧</h2>
    <div class="chat-list-container pb-5">
        <div class="chat-list item d-flex align-items-center" style="cursor: pointer;" onclick="window.location.href='/chat/edit/'">
            <div class="thumb align-items-center text-center justify-content-center d-flex flex-column" >
                <i class="fas fa-plus-circle fa-3x"></i>
            </div>
            <div class="chat-list-details">
                <div class="chat-list-info">
                    <div class="chat-list-title mb-1">
                        <h6 class="mb-0">新しいチャットボットを追加</h6>
                    </div>
                    <div class="chat-list-option" style="max-width: 40vw;">
                        <span style="font-size: 14px;color: #6c6c6c;" class="truncate-text py-1">クリックして新しいチャットボットを作成します。</span>
                    </div>
                </div>
            </div>
        </div>
        <hr class="separator">

        {{#each chats}}
            <div class="chat-list item user-chat d-flex align-items-center justify-content-between p-0" style="cursor: pointer;" data-id="{{this._id}}">
                <div class="d-flex align-items-center w-100" onclick=(window.location="/chat/{{this._id}}")>
                    <div class="thumb align-items-center text-center justify-content-center d-flex flex-column col-1" >
                        <img class="img-fluid" src="{{#if this.thumbnailUrl}}{{this.thumbnailUrl}}{{else}}/img/logo.webp{{/if}}" alt="">
                    </div>
                    <div class="chat-list-details">
                        <div class="chat-list-info">
                            <div class="chat-list-title mb-1 pt-3">
                                <h6 class="mb-0"><a href="/chat/{{this._id}}" target="_blank">{{this.name}}</a></h6>
                            </div>
                            <div class="chat-list-option" style="max-width: 95%;">
                                <span style="font-size: 12px;" class="truncate-text py-1">{{this.description}}</span>
                                <p class="text-muted" style="font-size:12px"><i class="fas fa-clock me-1"></i>{{this.dateStrJP}}{{#if this.visibility}}
                                    <span class="fas fa-eye"></span>
                                {{else}}
                                    <span class="fas fa-eye-slash"></span>
                                {{/if}}
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="chat-list-actions col-sm-3">
                    <div class="d-flex align-items-center">
                        <!-- Dropdown -->
                        <div class="dropdown">
                            <button class="btn btn-link dropdown-toggle" type="button" id="dropdownMenuButton_{{this._id}}" data-mdb-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton_{{this._id}}">
                                <li>
                                    <button class="dropdown-item chart-button" data-id="{{this._id}}">
                                        <i class="fas fa-chart-line"></i> 分析
                                    </button>
                                </li>
                                <li>
                                    <button class="dropdown-item tag-button" data-id="{{this._id}}">
                                        <i class="fas fa-share"></i> 共有
                                    </button>
                                </li>
                                <li>
                                    <a href="/chat/edit/{{this._id}}" class="dropdown-item">
                                        <i class="far fa-edit"></i> 編集
                                    </a>
                                </li>
                                <li>
                                    <span data-id="{{this._id}}" class="dropdown-item delete-chat" style="cursor:pointer">
                                        <i class="fas fa-trash"></i> 削除
                                    </span>
                                </li>
                            </ul>
                        </div>
                        <!-- End of Dropdown -->
                    </div>
                </div>
            </div>
        {{/each}}
    </div>
</div>
 {{> dashboard-footer}}
<style>
        .swal-image{
            border-radius: 50px;
            object-fit: cover;
        }
</style>
<script>
$(document).ready(function() {
    enableToggleDropdown()
    $('.chart-button').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        // data-id属性からチャットIDを取得
        var chatId = $(this).data('id');

        // POSTリクエストを送信
        $.post('/api/chat-analyze/', { chatId: chatId })
            .done(function(response) {
                console.log(response.chat)
                // 受け取ったデータの長さを取得
                var dataLength = response.total;

                // SweetAlert2でアラートを表示
                Swal.fire({
                    html: `
                        <div class="card border-0 shadow-0">
                            <div class="card-body">
                                <h5 class="card-title">${response.chat.name}</h5>
                                <p class="card-text text-muted" style="font-size: 16px;">${response.chat.description}</p>
                                <p class="card-text text-muted d-none" style="font-size: 14px;">作成者: ${response.author}</p>
                                <div class="d-flex justify-content-between mb-3">
                                    <div class="card-text text-center d-flex w-100 d-none" style="flex-direction: column;"><span class="w-100">${response.chat.rating ? response.chat.rating : '...'}</span><span class="text-muted" style="font-size: 12px;">評価</span></div>
                                    <div class="card-text text-center d-flex w-100" style="flex-direction: column;" ><span class="w-100">${response.chat.category ? response.chat.category : '...'}</span><span class="text-muted" style="font-size: 12px;">カテゴリー</span></div>
                                    <div class="card-text text-center d-flex w-100" style="flex-direction: column;" ><span class="w-100">${response.total ? response.total : '0'}</span><span class="text-muted" style="font-size: 12px;">会話の合計</span></div>
                                </div>
                                <a href="/chat/${response.chat._id}" class="btn btn-dark w-100 my-4" style="border-radius:50px;">チャットを始める</a>
                            </div>
                        </div>
                    `,
                    imageUrl: response.chat.thumbnailUrl || '/img/logo.webp',
                    imageWidth: 100,
                    imageHeight: 100,
                    imageAlt: 'Thumbnail',
                    showCloseButton: true,
                    showConfirmButton: false,
                    customClass: {
                        image: 'swal-image'
                    }
                });
            })
            .fail(function() {
                // エラーハンドリング
                Swal.fire({
                    title: 'エラー',
                    text: 'データの取得に失敗しました。',
                    icon: 'error'
                });
            });
    });
    $('.tag-button').click(function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        var dataId = $(this).attr('data-id');
        var codeToCopy = `<div id="lamix-chat-widget" data-id="${dataId}"></div><script src="https://lamix.hatoltd.com/js/chat-widget.js"></` + `script>`;

        // Create a temporary textarea element to copy the text
        var $temp = $('<textarea>');
        $('body').append($temp);
        $temp.val(codeToCopy).select();
        document.execCommand('copy');
        $temp.remove();

        // Show SweetAlert2 notification
        Swal.fire({
            title: 'コピー完了',
            text: 'タグをコピーしました。チャットボットを設置したい場所にタグを貼り付けてください。',
            icon: 'success',
            confirmButtonText: 'OK'
        });
    });
    $('.copyButton').click(function(e) {
        e.preventDefault()
        e.stopPropagation();
        var chatId = $(this).data('chatid');
        
        $.ajax({
            url: '/api/chat/' + chatId,
            method: 'GET',
            success: function(chat) {
                var tempInput = $('<input>');
                $('body').append(tempInput);
                tempInput.val(JSON.stringify(chat.content)).select();
                var successful = document.execCommand('copy');
                tempInput.remove();

                if (successful) {
                    Swal.fire('Success', 'コンテンツがクリップボードにコピーされました。', 'success');
                } else {
                    Swal.fire('Error', 'コンテンツのコピーに失敗しました。', 'error');
                }
            },
            error: function() {
                Swal.fire('Error', 'コンテンツの取得に失敗しました。', 'error');
            }
        });
    });
    $('.delete-chat').on('click', function(e) {
        e.preventDefault()
        e.stopPropagation();
        const chatId = $(this).data('id');

        Swal.fire({
            title: '本当に削除しますか？',
            text: "この操作は元に戻せません！",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'はい、削除します！',
            cancelButtonText: 'キャンセル'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: `/api/delete-chat/${chatId}`,
                    type: 'DELETE',
                    success: function(response) {
                        $(`.chat-list[data-id="${chatId}"]`).fadeOut().remove()
                    },
                    error: function(xhr, status, error) {
                        Swal.fire(
                            'エラー',
                            'チャットの削除に失敗しました。',
                            'error'
                        );
                    }
                });
            }
        });
    });
    
    $('.chat-switch').on('click', function(e) {
        e.stopPropagation();
        
        // Your button-specific code here
        console.log("Button clicked, event propagation stopped");
    });
    $('.chat-switch').on('change', function() {
        $('.chat-switch').not(this).prop('checked', false);
        let chatId = $(this).data('chatid');
        if ($(this).is(':checked')) {
            $.post('/api/set-chat', { chatId: chatId })
                .done(function(response) {
                    Swal.fire({
                        title: '成功',
                        text: 'チャットがアクティブになりました。',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                })
                .fail(function(error) {
                    Swal.fire({
                        title: 'エラー',
                        text: 'チャットをアクティブにできませんでした。',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
        }
    });
    function enableToggleDropdown() {
        // Check if the event listener is already attached to the element
        if (!$(document).find('.dropdown-toggle').data('hasEventListener')) {
            // Attach the event listener and set the flag
            $(document).on('click', '.dropdown-toggle', function(e) {
                e.preventDefault();
                e.stopPropagation();
            }).data('hasEventListener', true);

            // Initialize the dropdown
            $(document).find('.dropdown-toggle').each(function(e) {
                new mdb.Dropdown($(this)[0]);
            });
        }
    }
});
</script>

</body>
</html>
