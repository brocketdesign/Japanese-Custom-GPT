<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="icon" href="/img/logo.webp" type="image/webp">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="//code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <link rel="stylesheet" href="/css/chat.css">
</head>
<body>
    <nav class="navbar navbar-light bg-transparent py-1 sticky-top" style="border-bottom: 1px solid rgba(210, 184, 255, 0.2);">
    <div class="container-fluid justify-content-between">
        <a class="navbar-brand d-flex flex-row align-items-center bg-white px-5 py-2" href="/">
        <img src="/img/logo.webp" alt="" class="logo">
        <span class="brand-name ms-3">LAMIX</span>
        </a>
        <a href="/authenticate" class="btn px-4 py-2 border" style="border-radius:40px;background: linear-gradient(90.9deg, rgba(247, 243, 255, 0.5) 2.74%, #B894F9 102.92%);"><i class="fas fa-plus me-2"></i>作成する</a>
    </div>
    </nav>

    <section class="hero bg-light py-5 p-fv" style="backgroun-position:bottom">
        <div class="container text-center d-flex flex-column align-items-center py-5">
            <img src="/img/logo.webp" alt="LAMIXボット ロゴ" class="mb-4" style="width: 150px;border-radius:50%;">
            <div>
                <h1 id="chat-hero" class="display-4 text-center" style="min-height: 150px;"></h1>
                <p class="lead">LAMIXボットでチャットボットの可能性を最大限に引き出しましょう。</p>
                <a href="/authenticate" class="btn btn-dark btn-lg px-5 py-3 m-5">無料ではじめる<i class="mx-2 fas fa-arrow-circle-right"></i></a>
            </div>
        </div>
    </section>

    <div class="container">
        <div id="quizSection" >
            <div id="chat-container" class="card mt-3 mb-5 shadow rounded">
                <div class="d-flex justify-content-between card-header text-center text-white rounded rounded-bottom-0" style="background-color:#38b6ff">
                    <div>LAMIXチャット</div>
                    <div class="d-flex align-items-center">
                        <div class="count me-2"></div><i class="fas fa-comment"></i>
                    </div>
                </div>
                <div class="card-body text-center pb-5  rounded-0" style="z-index: 1;">
                    <div id="chatContainer" class="sticky-top">
                        <div id="messages"></div>
                    </div>
                </div>
                <div id="chatInput" class="input-group rounded-0 rounded-bottom">
                    <input type="text" id="userMessage" class="form-control py-3" placeholder="メッセージを入力してください">
                    <button id="sendMessage" class="btn btn-light px-4"><i class="fas fa-paper-plane"></i></button>
                </div>
            </div>
        </div>
        <footer class="l-footer p-footer">
            <div class="c-section-inner">
                <div class="p-footer__logo">
                    <a href="https://hatoltd.com/" target="_blank"><img src="/img/hato.png" alt=""></a>
                </div>
                <div class="p-footer-flex">
                    <p class="p-footer__leftText">〒530-0001<br>
                        大阪府大阪市北区梅田1丁目2番2号大阪駅前第2ビル12-12
                    </p>
                    <small class="p-footer__copyright" translate="no" lang="en">
                        Copyright ©2024 HATO,LTD. All Rights Reserved.
                    </small>
                </div>
            </div>
        </footer>
    </div>
<script>
var userId
var userIp
$(document).ready(function() {
    var count = 0

    // Fetch the user's IP address and generate a unique ID
    fetchUserIP(function(new_userId,userIp) {

        function sendCustomData(customData){
            $.ajax({
                url: '/api/custom-data',
                type: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                data: JSON.stringify({ userId: userId, customData: customData }),
                success: function(response) {
                    
                },
                error: function(error) {
                    console.log(error.statusText);
                }
            });
        }
    });
    // Function to hash the IP address to generate a unique ID
    function hashIP(ip) {
        let hash = 0, i, chr;
        if (ip.length === 0) return hash;
        for (i = 0; i < ip.length; i++) {
            chr = ip.charCodeAt(i);
            hash = ((hash << 5) - hash) + chr;
            hash |= 0; // Convert to 32bit integer
        }
        return hash;
    }

    // Function to fetch the user's IP address using an API
    function fetchUserIP(callback) {
        $.getJSON('https://api.ipify.org?format=json', function(data) {
            userIp = data.ip;
            userId = hashIP(userIp); 
            if (callback) {
                callback(userId,userIp); // Call the callback function with userID
            }
        });
    } 

    function appendHeadlineCharacterByCharacter($element, headline, callback) {
        let index = 0;

        setTimeout(() => {
            setTimeout(() => {
                let intervalID = setInterval(function() {
                    if (index < headline.length) {
                        $element.append(headline.charAt(index));
                        index++;
                    } else {
                        clearInterval(intervalID);
                        if (callback) callback();
                    }
                }, 25);
            }, 100);
        }, 500);
    };

    function clearContentFromEnd($element, callback) {
        let currentContent = $element.text();

        let clearIntervalID = setInterval(function() {
            if (currentContent.length > 0) {
                currentContent = currentContent.substring(0, currentContent.length - 1);
                $element.text(currentContent);
            } else {
                clearInterval(clearIntervalID);
                if (typeof callback === 'function') {
                    callback();
                }
            }
        }, 25); // This duration can be adjusted as per your requirement
    }

    let catchphrases = [
        'あなたのカスタムチャットボットを簡単に管理',
        'LAMIXボットでチャットボットの可能性を最大限に',
        '直感的なダッシュボードで管理が楽々',
        'リアルタイムでチャットボットの状態を監視',
        'ビジネスを次のレベルへ'
    ];

    let index = 0;

    function displayNextCatchphrase() {
        appendHeadlineCharacterByCharacter($('#chat-hero'), catchphrases[index], function() {
            setTimeout(function() {
                clearContentFromEnd($('#chat-hero'), function() {
                    index = (index + 1) % catchphrases.length;
                    displayNextCatchphrase();
                });
            }, 3000);
        });
    }

    displayNextCatchphrase();
    
});

</script>
</body>
</html>
