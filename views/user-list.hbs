<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/img/logo.webp" type="image/webp">
    <title>ユーザーデータ</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">   
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="//code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">ユーザーデータ</h1>
        <div class="row mb-3">
            <div class="col-6">
                <div class="input-group me-2">
                    <span class="input-group-text" id="calendar-icon">
                        <i class="fas fa-calendar-alt"></i>
                    </span>
                    <input type="text" id="datepicker" class="form-control" placeholder="Select Date">
                </div>
            </div>
            <div class="col-6 text-end">
                <button id="yesterdayButton" class="btn btn-secondary me-2">昨日</button>
                <button id="todayButton" class="btn btn-secondary">今日</button>
            </div>
        </div>
        <div class="d-flex justify-content-between align-items-center mb-3">
            <p class="mb-0">
                <span id="count"></span>/<span id="total-count"></span>
            </p>
            <div>
                <button class="btn btn-primary me-2 sort-button" data-query="choice">Sort by Choice</button>
                <button class="btn btn-secondary sort-button" data-query="scroll">Sort by Scroll</button>
            </div>
        </div>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>メール</th>
                    <th>タイムスタンプ</th>
                    <th>スクロール</th>
                    <th>A/B</th>
                    <th>詳細</th>
                    <th>フィードバック</th>
                    <th>生成</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                <!-- ユーザーデータがここに表示されます -->
            </tbody>
        </table>
        <div class="w-100 text-center">
            <div id="spinner" class="spinner-border text-primary" role="status" style="display: none;">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

    <script>
        
        var selectedDate = null;
        $(document).ready(function() {

            $("#datepicker").datepicker({
                dateFormat: "yy-mm-dd",
                onSelect: function(dateText) {
                    selectedDate = new Date(dateText);
                    updateTable(new Date(dateText));
                }
            });

            $('#yesterdayButton').click(function() {
                let yesterday = new Date();
                yesterday.setDate(yesterday.getDate() - 1);
                updateTable(yesterday);
            });

            $('#todayButton').click(function() {
                updateTable(new Date());
            });

            $(".sort-button").on("click", function() {
                const query = $(this).data('query')
                var dateToUse = selectedDate ? selectedDate : new Date();
                updateTable(dateToUse, query);
            });

            function updateTable(selectedDate, query) {
                const options = {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit',
                    timeZone: 'Asia/Tokyo',
                    timeZoneName: 'short'
                };
                
                const tableBody = $('#userTableBody');
                tableBody.empty();
                $('#spinner').show();

                $.ajax({
                    url: '/api/user-data',
                    method: 'GET',
                    dataType: 'json',
                    data: {
                        query: query,
                        date: selectedDate
                    },
                    success: function(data) {
                        let count = 0;
                        let totalCount = 0;

                        data.forEach(function(user) {
                            var date = new Date(user.createdAt);
                            var formattedDate = date.toLocaleDateString('ja-JP', options);
                            let maxScroll = getActionObject(user.customData, 'scroll');
                            maxScroll = maxScroll ? parseInt(maxScroll.scrollPercentage) : 0;
                            let abTest = getActionObject(user.customData, 'a/b');
                            abTest = abTest ? abTest.variant : '';
                            totalCount++;
                            count++;

                            const row = $('<tr>').html(`
                                <td>${user.email || 'N/A'}</td>
                                <td>${formattedDate}</td>
                                <td>${maxScroll}%</td>
                                <td>${abTest}</td>
                                <td><button class="btn btn-primary" onclick="showUserChoices('${user.userId}')">詳細</button></td>
                                <td>${user.reason || 'N/A'}</td>
                                <td><a href="/generate/${user._id}" target="_blank">生成</a></td>
                            `);
                            tableBody.append(row);
                        });

                        $('#count').text(count);
                        $('#total-count').text(totalCount);
                    },
                    error: function(error) {
                        console.error('Failed to fetch user data:', error);
                    },
                    complete: function() {
                        // Hide the spinner
                        $('#spinner').hide();
                    }
                });
            }

            // Initial load for today
            updateTable(new Date());
        });

        function getActionObject(customData, action) {
            // Implement your logic to extract the action object from customData
            return customData.find(item => item.action === action);
        }

        function showUserChoices(userId) {
            // Implement your logic to show user choices
            alert('Showing choices for user: ' + userId);
        }

    function getActionObject(customData, actionName) {
        var actionObject = null;
        $.each(customData, function(index, data) {
            if (data && data.action === actionName) {
                actionObject = data;
                return false; // Break the loop once the action is found
            }
        });
        return actionObject;
    }

    function showUserChoices(userId) {
        fetch(`/api/user-data?userId=${userId}`)
            .then(response => response.json())
            .then(user => {
                if (user.choices && user.choices.length > 0) {
                    const choicesTable = user.choices.map(choice => `
                        <tr>
                            <td>${choice.choice}</td>
                            <td>${new Date(choice.timestamp).toLocaleString()}</td>
                        </tr>
                    `).join('');

                    Swal.fire({
                        title: 'ユーザーの選択肢',
                        html: `
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>選択</th>
                                        <th>タイムスタンプ</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${choicesTable}
                                </tbody>
                            </table>
                        `,
                        width: '600px',
                        showCloseButton: true,
                        focusConfirm: false
                    });
                } else {
                    Swal.fire({
                        title: '情報',
                        text: '選択肢が見つかりませんでした。',
                        icon: 'info',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: 'エラー',
                    text: 'ユーザーの選択肢を取得できませんでした。',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                console.error('Failed to fetch user choices:', error);
            });
    }

    </script>
</body>
</html>
