<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="icon" href="/img/logo.webp" type="image/webp">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="//code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
<nav class="navbar navbar-light bg-transparent fixed-top pb-3" style="border-bottom: 1px solid rgba(210, 184, 255, 0.2);">
  <div class="container-fluid justify-content-between">
    <a class="navbar-brand d-flex flex-row align-items-center bg-white px-5 py-2" href="/">
      <img src="/img/logo.webp" alt="" class="logo">
      <span class="brand-name ms-3">LAMIX</span>
    </a>
    <a href="#quizSection" class="btn btn-gradient-3d-orange">診断を受ける</a>
  </div>
</nav>

<div class="p-fv">
    <div style="padding-top:160px;">
        <p class="text-center display-6 p-fv-copy__top fw-bold ">ピッタリの<br>収入源を診断！</p>
        <p class="text-center display-3 p-fv-copy__middle fw-bold mb-5">意外な収入増に繋がるかも</p>
        <div class="text-center w-100">
            <span class="p-fv-copy__bottom">あなたの隠れた才能を活かそう！<br>AIが導く驚きの収入アップ</span>
        </div>
    </div>
    <div  id="quizSection" class="text-center pt-5">
        <i class="fas fa-chevron-down" style="font-size: 36px;"></i>
        <i class="fas fa-chevron-down" style="font-size: 36px;"></i>
        <i class="fas fa-chevron-down" style="font-size: 36px;"></i>
    </div>
    <div class="container mt-4">
        <div class="card my-5">
            <div class="d-flex justify-content-between card-header text-center bg-dark text-white">
                <div>LAMIXチャット</div>
                <div class="d-flex align-items-center">
                    <div class="count me-2"></div><i class="fas fa-comment"></i>
                </div>
            </div>
            <div class="card-body text-center py-5" style="min-height:250px;height: 75vh;overflow-y: auto;">
                <h5 class="card-title d-none">Card Title</h5>
                <div id="chatContainer">
                </div>
            </div>
            <div class="card-footer text-muted text-center d-none">
                フッターコンテンツ
            </div>
        </div>
    </div>
    </div>

    <section class="p-best mb-5">
      <div class="c-section-inner">
        <h2 class="c-section-title u-tal">
          未来への一歩は、<br>
          <span class="u-font-manrope u-color-grad">Lamix</span>から始まる！
          <div class="p-best-illust">
            <span><img src="/img/best_illust.svg" alt="" class="u-rocketman"></span>
          </div>
        </h2>
        <ul class="p-best__lists" style="list-style: none;padding: 0;">
          <li class="p-best__list u-border-grad">
            <div class="p-best__listInner u-border-grad--bg">
              <div class="p-best__title--flex">
                <img src="/img/icon01.svg" alt="">
                <h3 class="p-best__title">
                  <span class="u-color-grad">Stability</span>
                  <span class="p-best__title--sub">安定性</span>
                </h3>
              </div>
              <p class="p-best__text">現職に留まることは、安定した収入と生活を維持するための最も確実な方法です。特に家族がいる場合、安定した収入は生活の質を保つために重要です。現職での安定したポジションは、将来の予測可能な収入を提供し、経済的な不安を軽減します。さらに、現職でのキャリアアップを目指すことで、収入の増加も期待できます。安定性を重視する場合、資格取得や追加トレーニングを通じて専門スキルを強化し、現在の職場での価値を高めることが有効です。</span>
              </p>
            </div>
          </li>
          <li class="p-best__list u-border-grad">
            <div class="p-best__listInner u-border-grad--bg">
              <div class="p-best__title--flex">
                <img src="/img/icon03.svg" alt="">
                <h3 class="p-best__title"><span class="u-color-grad">Risk</span><span class="p-best__title--sub">リスク</span></h3>
              </div>
              <p class="p-best__text">新しいビジネスを始めることや、スタートアップに参加することは大きなリスクを伴います。不安定な収入や不確実な将来性があるため、十分な準備と計画が必要です。特に家族がいる場合、リスクを冒すことは慎重に検討する必要があります。新しい挑戦は成長と学びの機会を提供する一方で、経済的な安定を損なう可能性もあります。リスクを取る場合は、十分な資金とサポート体制を確保し、最悪のシナリオにも対応できる準備が重要です。
              </p>
            </div>
          </li>
        </ul>
        <div class="text-center mt-4">
          <a href="#quizSection" class="btn btn-gradient-radius"><span>クイズセクションに戻る</span></a>
        </div>
      </div>
    </section>

<footer class="l-footer p-footer">
    <div class="c-section-inner">
      <div class="p-footer__logo">
        <a href="https://hatoltd.com/" target="_blank"><img src="/img/hato.png" alt=""></a>
      </div>
      <div class="p-footer-flex">
        <p class="p-footer__leftText">〒530-0001<br>
           大阪府大阪市北区梅田1丁目2番2号大阪駅前第2ビル12-12
        </p>
        <small class="p-footer__copyright" translate="no" lang="en">
          Copyright ©2024 HATO,LTD. All Rights Reserved.
        </small>
      </div>
    </div>
    <!-- /.c-section-inner -->
  </footer>
<script src="/js/quiz.js"></script>
<script>
var userId
var userIp
$(document).ready(function() {
    // Function to hash the IP address to generate a unique ID
    function hashIP(ip) {
        let hash = 0, i, chr;
        if (ip.length === 0) return hash;
        for (i = 0; i < ip.length; i++) {
            chr = ip.charCodeAt(i);
            hash = ((hash << 5) - hash) + chr;
            hash |= 0; // Convert to 32bit integer
        }
        return hash;
    }

    // Function to fetch the user's IP address using an API
    function fetchUserIP(callback) {
        $.getJSON('https://api.ipify.org?format=json', function(data) {
            userIp = data.ip;
            userId = hashIP(userIp); 
            if (callback) {
                callback(userId,userIp); // Call the callback function with userID
            }
        });
    }

    // Fetch the user's IP address and generate a unique ID
    fetchUserIP(function(userId,userIp) {
        console.log("User ID available globally: " + userId + '-' + userIp);
        // Now you can use the userID variable or id parameter here
    });
    const storyId = "{{storyId}}";
    let currentStep = 0;
    let totalSteps = 0;
    let storyData = {};

    fetchStoryData(storyId); // Fetch the initial story data when the page loads

     window.choosePath = function(choiceId) {
        if (currentStep === totalSteps - 1) {
            hideOtherChoice(choiceId,currentStep)
            // Call email prompt function before showing the last step conclusion
            
            promptForEmail().then((result) => {
                if(result){
                    displayConclusion(choiceId);
                }
            });
            
        } else {
            currentStep++;
            hideOtherChoice(choiceId,currentStep - 1)
            updateStoryContent(choiceId);
        }
        $.ajax({
            url: '/api/data',
            type: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            data: JSON.stringify({ choice: choiceId, userId: userId, userIp: userIp }),
            success: function(response) {
                
            },
            error: function(error) {
                console.log(error.statusText);
            }
        });
    };

    function fetchStoryData(storyId) {
        $.ajax({
            url: `/api/story/${storyId}`,
            type: 'GET',
            dataType: 'json',
            success: function(data) {
                storyData = data.content.story;
                totalSteps = Object.keys(storyData).length;
                storyName = data.name

                $('h1').text(storyName)
                displayStep(storyData, currentStep);
            },
            error: function(xhr, status, error) {
                Swal.fire({
                    title: 'エラー!',
                    text: 'ストーリーの読み込みに失敗しました: ' + error,
                    icon: 'error',
                    confirmButtonText: 'Ok',
                    showCancelButton: true,
                    cancelButtonText: '一覧を見る'
                }).then((result) => {
                    if (result.dismiss === Swal.DismissReason.cancel) {
                        window.location.href = '/stories';
                    }
                });

            }
        });
    }

    function displayStep(storyData, currentStep) {
        const step = storyData[`step${currentStep + 1}`];
        $(`.card-header .count`).text(`${currentStep + 1}/${totalSteps}`)
        $('#chatContainer').append(`
        <div id="container-${currentStep}">
            <div class="d-flex flex-row justify-content-start mb-4 message-container" style="opacity:0;">
                <img src="/img/logo.webp" alt="avatar 1" style="min-width: 45px; width: 45px; height: 100%; border-radius: 15%;">
                <div id="message-${currentStep}" class="p-3 ms-3 text-start" style="border-radius: 15px;   background: linear-gradient(90.9deg, rgba(247, 243, 255, 0.5) 2.74%, #B894F9 102.92%);"></div>
            </div>
            
            <div id="response-${currentStep}"></div>
        </div>`)
        step.choices.forEach((choice, index) => {
            const button = $(`<button class="btn btn-flat-border my-2" data-id="${choice.choiceId}" onclick="choosePath('${choice.choiceId}')">${choice.choiceText}</button>`);
            button.css('opacity',0)
            $(`#response-${currentStep}`).append(button);
        });
        appendHeadlineCharacterByCharacter($(`#message-${currentStep}`), step.introduction,function(){
            $(`#response-${currentStep} button`).each(function(){
                $(this).css('opacity',1)
            })
        })
    }

    function updateStoryContent(choiceId) {
        const previousStep = storyData[`step${currentStep}`]; // Previous step where the choice was made
        const choice = previousStep.choices.find(c => c.choiceId === choiceId);
        $(`.card-header .count`).text(`${currentStep + 1}/${totalSteps}`)
        $('#chatContainer').append(`
        <div id="container-${currentStep}">

            <div class="d-flex flex-row justify-content-end mb-4 message-container" style="opacity:0;">
                <div id="result-${currentStep - 1}" class="p-3 me-3 border" style="border-radius: 15px; background-color: #fbfbfb;"></div>
            </div>

            <div class="d-flex flex-row justify-content-start mb-4 message-container" style="opacity:0;">
                <img src="/img/logo.webp" alt="avatar 1" style="min-width: 45px; width: 45px; height: 100%; border-radius: 15%;">
                <div id="message-${currentStep}" class="p-3 ms-3 text-start" style="border-radius: 15px;   background: linear-gradient(90.9deg, rgba(247, 243, 255, 0.5) 2.74%, #B894F9 102.92%);"></div>
            </div>

            <div id="response-${currentStep}"></div>
        </div>`)

        if (currentStep < totalSteps) {

            const nextStep = storyData[`step${currentStep + 1}`];
            nextStep.choices.forEach(choice => {
                const button = $(`<button class="btn btn-flat-border my-2" data-id="${choice.choiceId}" onclick="choosePath('${choice.choiceId}')">${choice.choiceText}</button>`)
                button.css('opacity',0)
                $(`#response-${currentStep}`).append(button);
            });

            $(`#result-${currentStep - 1}`).append(choice.result)
            $(`#result-${currentStep - 1}`).closest('.message-container').animate({ opacity: 1 }, 1000, function() { 
                appendHeadlineCharacterByCharacter($(`#message-${currentStep}`), nextStep.introduction,function(){
                    $(`#response-${currentStep} button`).each(function(){
                        $(this).css('opacity',1)
                    })
                });
            })


        }
    }

    function displayConclusion(choiceId) {
        const previousStep = storyData[`step${currentStep + 1}`]; // Previous step where the choice was made      
        const choice = previousStep.choices.find(c => c.choiceId === choiceId);
        const lastStep = storyData[`step${currentStep + 1}`];
        $('#chatContainer').append(`
        <div id="container-${currentStep}">
             <div class="d-flex flex-row justify-content-end mb-4 message-container" style="opacity:0;">
                <div id="result-${currentStep + 1}" class="p-3 me-3 border" style="border-radius: 15px; background-color: #fbfbfb;"></div>
            </div>
            <div class="d-flex flex-row justify-content-start mb-4 message-container" style="opacity:0;">
                <img src="/img/logo.webp" alt="avatar 1" style="min-width: 45px; width: 45px; height: 100%; border-radius: 15%;">
                <div id="response-${currentStep + 1}" class="p-3 ms-3 text-start" style="border-radius: 15px;   background: linear-gradient(90.9deg, rgba(247, 243, 255, 0.5) 2.74%, #B894F9 102.92%);"></div>
            </div>
        </div>`)
        $(`#result-${currentStep + 1}`).append(choice.result)
        $(`#result-${currentStep + 1}`).closest('.message-container').animate({ opacity: 1 }, 1000, function() { 
            appendHeadlineCharacterByCharacter($(`#response-${currentStep + 1}`), previousStep.conclusion);
        })
    }

function hideOtherChoice(choiceId, currentStep) {

    $(`#response-${currentStep} button`).each(function() {
        $(this).remove()
    });
}


function promptForEmail() {
    return Swal.fire({
        title: '結果を受け取る',
        text: 'メールアドレスを入力して結果を見る',
        input: 'email',
        inputPlaceholder: 'メールアドレスを入力してください',
        showCancelButton: true,
        confirmButtonText: '送信',
        cancelButtonText: 'キャンセル',
        footer: '<small>メールアドレスは <a href="https://hatoltd.com/privacy-policy/" target="_blank">プライバシーポリシー</a> に従ってのみ使用され、スパムや他の目的には使用されません。</small>',
        preConfirm: (email) => {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: '/api/submit-email',
                    type: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify({ email, userId: userId, userIp: userIp }),
                    success: function(response) {
                        resolve(response);
                    },
                    error: function(error) {
                        reject(error.statusText);
                    }
                });
            })
            .catch(error => {
                Swal.showValidationMessage(
                    `リクエストに失敗しました: ${error}`
                );
            });
        }
    }).then((result) => {
        if (result.isConfirmed) {
            return true;
        } else {
            Swal.fire('残念です', 'それは残念です。', 'info');
            return false;
        }
    });
}



});
</script>
</body>
</html>
